//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessObject.Context
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbVASEntities : DbContext
    {
        public dbVASEntities()
            : base("name=dbVASEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_Accessgroup> tbl_Accessgroup { get; set; }
        public virtual DbSet<tbl_AccessgroupMenu> tbl_AccessgroupMenu { get; set; }
        public virtual DbSet<tbl_AccessgroupUser> tbl_AccessgroupUser { get; set; }
        public virtual DbSet<tbl_Menu> tbl_Menu { get; set; }
        public virtual DbSet<tbl_User> tbl_User { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tbl_Date> tbl_Date { get; set; }
        public virtual DbSet<tbl_Aggregators> tbl_Aggregators { get; set; }
        public virtual DbSet<tbl_CategoryVASService> tbl_CategoryVASService { get; set; }
        public virtual DbSet<tbl_HeadNumber> tbl_HeadNumber { get; set; }
        public virtual DbSet<tbl_NewsContent> tbl_NewsContent { get; set; }
        public virtual DbSet<tbl_ReceiveLog> tbl_ReceiveLog { get; set; }
        public virtual DbSet<tbl_SendLog> tbl_SendLog { get; set; }
        public virtual DbSet<tbl_UnsubscriptionTerm> tbl_UnsubscriptionTerm { get; set; }
        public virtual DbSet<tbl_VASService> tbl_VASService { get; set; }
        public virtual DbSet<tbl_VASServiceMembership> tbl_VASServiceMembership { get; set; }
        public virtual DbSet<tbl_VASServiceMembership_NewsContent> tbl_VASServiceMembership_NewsContent { get; set; }
        public virtual DbSet<tbl_VASServiceMembershipSerialContentFooter> tbl_VASServiceMembershipSerialContentFooter { get; set; }
        public virtual DbSet<tbl_VASServiceMembershipSerialContentHeader> tbl_VASServiceMembershipSerialContentHeader { get; set; }
        public virtual DbSet<tbl_VASServiceMembershipSubscriber> tbl_VASServiceMembershipSubscriber { get; set; }
        public virtual DbSet<tbl_VASServiceOnDemand> tbl_VASServiceOnDemand { get; set; }
        public virtual DbSet<tbl_VASServiceOnDemandManualContent> tbl_VASServiceOnDemandManualContent { get; set; }
        public virtual DbSet<tbl_VASServiceOnDemandSystematic> tbl_VASServiceOnDemandSystematic { get; set; }
        public virtual DbSet<tbl_SystemSetting> tbl_SystemSetting { get; set; }
        public virtual DbSet<tbl_CRMCategory> tbl_CRMCategory { get; set; }
        public virtual DbSet<tbl_CRM> tbl_CRM { get; set; }
    
        public virtual int spr_Aggregators_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_Aggregators_Delete", iDParameter);
        }
    
        public virtual int spr_Aggregators_Insert(string name, string pardisPreNumber, string iMIPreNumber, string remarks)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var pardisPreNumberParameter = pardisPreNumber != null ?
                new ObjectParameter("PardisPreNumber", pardisPreNumber) :
                new ObjectParameter("PardisPreNumber", typeof(string));
    
            var iMIPreNumberParameter = iMIPreNumber != null ?
                new ObjectParameter("IMIPreNumber", iMIPreNumber) :
                new ObjectParameter("IMIPreNumber", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_Aggregators_Insert", nameParameter, pardisPreNumberParameter, iMIPreNumberParameter, remarksParameter);
        }
    
        public virtual int spr_Aggregators_Update(Nullable<int> iD, string name, string pardisPreNumber, string iMIPreNumber, string remarks)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var pardisPreNumberParameter = pardisPreNumber != null ?
                new ObjectParameter("PardisPreNumber", pardisPreNumber) :
                new ObjectParameter("PardisPreNumber", typeof(string));
    
            var iMIPreNumberParameter = iMIPreNumber != null ?
                new ObjectParameter("IMIPreNumber", iMIPreNumber) :
                new ObjectParameter("IMIPreNumber", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_Aggregators_Update", iDParameter, nameParameter, pardisPreNumberParameter, iMIPreNumberParameter, remarksParameter);
        }
    
        public virtual int spr_CategoryVASService_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_CategoryVASService_Delete", iDParameter);
        }
    
        public virtual int spr_CategoryVASService_Insert(string title)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_CategoryVASService_Insert", titleParameter);
        }
    
        public virtual int spr_CategoryVASService_Update(Nullable<int> iD, string title)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_CategoryVASService_Update", iDParameter, titleParameter);
        }
    
        public virtual int spr_HeadNumber_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_HeadNumber_Delete", iDParameter);
        }
    
        public virtual int spr_HeadNumber_Insert(Nullable<int> fK_AggregatorID, string theNumber, Nullable<bool> isParisType, Nullable<decimal> pardisServiceTariff)
        {
            var fK_AggregatorIDParameter = fK_AggregatorID.HasValue ?
                new ObjectParameter("FK_AggregatorID", fK_AggregatorID) :
                new ObjectParameter("FK_AggregatorID", typeof(int));
    
            var theNumberParameter = theNumber != null ?
                new ObjectParameter("theNumber", theNumber) :
                new ObjectParameter("theNumber", typeof(string));
    
            var isParisTypeParameter = isParisType.HasValue ?
                new ObjectParameter("IsParisType", isParisType) :
                new ObjectParameter("IsParisType", typeof(bool));
    
            var pardisServiceTariffParameter = pardisServiceTariff.HasValue ?
                new ObjectParameter("PardisServiceTariff", pardisServiceTariff) :
                new ObjectParameter("PardisServiceTariff", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_HeadNumber_Insert", fK_AggregatorIDParameter, theNumberParameter, isParisTypeParameter, pardisServiceTariffParameter);
        }
    
        public virtual int spr_HeadNumber_Update(Nullable<int> iD, Nullable<int> fK_AggregatorID, string theNumber, Nullable<bool> isParisType, Nullable<decimal> pardisServiceTariff)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fK_AggregatorIDParameter = fK_AggregatorID.HasValue ?
                new ObjectParameter("FK_AggregatorID", fK_AggregatorID) :
                new ObjectParameter("FK_AggregatorID", typeof(int));
    
            var theNumberParameter = theNumber != null ?
                new ObjectParameter("theNumber", theNumber) :
                new ObjectParameter("theNumber", typeof(string));
    
            var isParisTypeParameter = isParisType.HasValue ?
                new ObjectParameter("IsParisType", isParisType) :
                new ObjectParameter("IsParisType", typeof(bool));
    
            var pardisServiceTariffParameter = pardisServiceTariff.HasValue ?
                new ObjectParameter("PardisServiceTariff", pardisServiceTariff) :
                new ObjectParameter("PardisServiceTariff", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_HeadNumber_Update", iDParameter, fK_AggregatorIDParameter, theNumberParameter, isParisTypeParameter, pardisServiceTariffParameter);
        }
    
        public virtual int spr_NewsContent_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_NewsContent_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> spr_NewsContent_Insert(Nullable<int> fK_OwnerUserID, string theText, Nullable<System.DateTime> sendDate, Nullable<System.TimeSpan> sendTime, Nullable<System.DateTime> sTime)
        {
            var fK_OwnerUserIDParameter = fK_OwnerUserID.HasValue ?
                new ObjectParameter("FK_OwnerUserID", fK_OwnerUserID) :
                new ObjectParameter("FK_OwnerUserID", typeof(int));
    
            var theTextParameter = theText != null ?
                new ObjectParameter("theText", theText) :
                new ObjectParameter("theText", typeof(string));
    
            var sendDateParameter = sendDate.HasValue ?
                new ObjectParameter("SendDate", sendDate) :
                new ObjectParameter("SendDate", typeof(System.DateTime));
    
            var sendTimeParameter = sendTime.HasValue ?
                new ObjectParameter("SendTime", sendTime) :
                new ObjectParameter("SendTime", typeof(System.TimeSpan));
    
            var sTimeParameter = sTime.HasValue ?
                new ObjectParameter("STime", sTime) :
                new ObjectParameter("STime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spr_NewsContent_Insert", fK_OwnerUserIDParameter, theTextParameter, sendDateParameter, sendTimeParameter, sTimeParameter);
        }
    
        public virtual int spr_NewsContent_Update(Nullable<int> iD, string theText, Nullable<System.DateTime> sendDate, Nullable<System.TimeSpan> sendTime)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var theTextParameter = theText != null ?
                new ObjectParameter("theText", theText) :
                new ObjectParameter("theText", typeof(string));
    
            var sendDateParameter = sendDate.HasValue ?
                new ObjectParameter("SendDate", sendDate) :
                new ObjectParameter("SendDate", typeof(System.DateTime));
    
            var sendTimeParameter = sendTime.HasValue ?
                new ObjectParameter("SendTime", sendTime) :
                new ObjectParameter("SendTime", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_NewsContent_Update", iDParameter, theTextParameter, sendDateParameter, sendTimeParameter);
        }
    
        public virtual int spr_UnsubscriptionTerm_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_UnsubscriptionTerm_Delete", iDParameter);
        }
    
        public virtual int spr_UnsubscriptionTerm_Insert(string theTerm)
        {
            var theTermParameter = theTerm != null ?
                new ObjectParameter("theTerm", theTerm) :
                new ObjectParameter("theTerm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_UnsubscriptionTerm_Insert", theTermParameter);
        }
    
        public virtual int spr_UnsubscriptionTerm_Update(Nullable<int> iD, string theTerm)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var theTermParameter = theTerm != null ?
                new ObjectParameter("theTerm", theTerm) :
                new ObjectParameter("theTerm", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_UnsubscriptionTerm_Update", iDParameter, theTermParameter);
        }
    
        public virtual int spr_VASService_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASService_Delete", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> spr_VASService_Insert(Nullable<int> fK_OwnerUserID, Nullable<int> fK_AggregatorID, Nullable<int> fK_HeadNumberID, Nullable<int> fK_VASServiceCategoryID, Nullable<bool> isPardis, string theWholeNumber, Nullable<bool> isActive, string serviceName, string remarks, string headerText, string footerText, string welcomeText, string goodbyeText, Nullable<decimal> servicePrice, Nullable<decimal> iMIEnduserTariff, string aggergatorServiceID, Nullable<bool> isOnDemand, Nullable<int> fK_UserID, Nullable<System.DateTime> sTime)
        {
            var fK_OwnerUserIDParameter = fK_OwnerUserID.HasValue ?
                new ObjectParameter("FK_OwnerUserID", fK_OwnerUserID) :
                new ObjectParameter("FK_OwnerUserID", typeof(int));
    
            var fK_AggregatorIDParameter = fK_AggregatorID.HasValue ?
                new ObjectParameter("FK_AggregatorID", fK_AggregatorID) :
                new ObjectParameter("FK_AggregatorID", typeof(int));
    
            var fK_HeadNumberIDParameter = fK_HeadNumberID.HasValue ?
                new ObjectParameter("FK_HeadNumberID", fK_HeadNumberID) :
                new ObjectParameter("FK_HeadNumberID", typeof(int));
    
            var fK_VASServiceCategoryIDParameter = fK_VASServiceCategoryID.HasValue ?
                new ObjectParameter("FK_VASServiceCategoryID", fK_VASServiceCategoryID) :
                new ObjectParameter("FK_VASServiceCategoryID", typeof(int));
    
            var isPardisParameter = isPardis.HasValue ?
                new ObjectParameter("IsPardis", isPardis) :
                new ObjectParameter("IsPardis", typeof(bool));
    
            var theWholeNumberParameter = theWholeNumber != null ?
                new ObjectParameter("theWholeNumber", theWholeNumber) :
                new ObjectParameter("theWholeNumber", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("ServiceName", serviceName) :
                new ObjectParameter("ServiceName", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var headerTextParameter = headerText != null ?
                new ObjectParameter("HeaderText", headerText) :
                new ObjectParameter("HeaderText", typeof(string));
    
            var footerTextParameter = footerText != null ?
                new ObjectParameter("FooterText", footerText) :
                new ObjectParameter("FooterText", typeof(string));
    
            var welcomeTextParameter = welcomeText != null ?
                new ObjectParameter("WelcomeText", welcomeText) :
                new ObjectParameter("WelcomeText", typeof(string));
    
            var goodbyeTextParameter = goodbyeText != null ?
                new ObjectParameter("GoodbyeText", goodbyeText) :
                new ObjectParameter("GoodbyeText", typeof(string));
    
            var servicePriceParameter = servicePrice.HasValue ?
                new ObjectParameter("ServicePrice", servicePrice) :
                new ObjectParameter("ServicePrice", typeof(decimal));
    
            var iMIEnduserTariffParameter = iMIEnduserTariff.HasValue ?
                new ObjectParameter("IMIEnduserTariff", iMIEnduserTariff) :
                new ObjectParameter("IMIEnduserTariff", typeof(decimal));
    
            var aggergatorServiceIDParameter = aggergatorServiceID != null ?
                new ObjectParameter("AggergatorServiceID", aggergatorServiceID) :
                new ObjectParameter("AggergatorServiceID", typeof(string));
    
            var isOnDemandParameter = isOnDemand.HasValue ?
                new ObjectParameter("IsOnDemand", isOnDemand) :
                new ObjectParameter("IsOnDemand", typeof(bool));
    
            var fK_UserIDParameter = fK_UserID.HasValue ?
                new ObjectParameter("FK_UserID", fK_UserID) :
                new ObjectParameter("FK_UserID", typeof(int));
    
            var sTimeParameter = sTime.HasValue ?
                new ObjectParameter("STime", sTime) :
                new ObjectParameter("STime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spr_VASService_Insert", fK_OwnerUserIDParameter, fK_AggregatorIDParameter, fK_HeadNumberIDParameter, fK_VASServiceCategoryIDParameter, isPardisParameter, theWholeNumberParameter, isActiveParameter, serviceNameParameter, remarksParameter, headerTextParameter, footerTextParameter, welcomeTextParameter, goodbyeTextParameter, servicePriceParameter, iMIEnduserTariffParameter, aggergatorServiceIDParameter, isOnDemandParameter, fK_UserIDParameter, sTimeParameter);
        }
    
        public virtual int spr_VASService_Update(Nullable<int> iD, Nullable<int> fK_VASServiceCategoryID, Nullable<bool> isActive, string serviceName, string remarks, string headerText, string footerText, string welcomeText, string goodbyeText, Nullable<decimal> servicePrice, Nullable<decimal> iMIEnduserTariff, string aggergatorServiceID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var fK_VASServiceCategoryIDParameter = fK_VASServiceCategoryID.HasValue ?
                new ObjectParameter("FK_VASServiceCategoryID", fK_VASServiceCategoryID) :
                new ObjectParameter("FK_VASServiceCategoryID", typeof(int));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var serviceNameParameter = serviceName != null ?
                new ObjectParameter("ServiceName", serviceName) :
                new ObjectParameter("ServiceName", typeof(string));
    
            var remarksParameter = remarks != null ?
                new ObjectParameter("Remarks", remarks) :
                new ObjectParameter("Remarks", typeof(string));
    
            var headerTextParameter = headerText != null ?
                new ObjectParameter("HeaderText", headerText) :
                new ObjectParameter("HeaderText", typeof(string));
    
            var footerTextParameter = footerText != null ?
                new ObjectParameter("FooterText", footerText) :
                new ObjectParameter("FooterText", typeof(string));
    
            var welcomeTextParameter = welcomeText != null ?
                new ObjectParameter("WelcomeText", welcomeText) :
                new ObjectParameter("WelcomeText", typeof(string));
    
            var goodbyeTextParameter = goodbyeText != null ?
                new ObjectParameter("GoodbyeText", goodbyeText) :
                new ObjectParameter("GoodbyeText", typeof(string));
    
            var servicePriceParameter = servicePrice.HasValue ?
                new ObjectParameter("ServicePrice", servicePrice) :
                new ObjectParameter("ServicePrice", typeof(decimal));
    
            var iMIEnduserTariffParameter = iMIEnduserTariff.HasValue ?
                new ObjectParameter("IMIEnduserTariff", iMIEnduserTariff) :
                new ObjectParameter("IMIEnduserTariff", typeof(decimal));
    
            var aggergatorServiceIDParameter = aggergatorServiceID != null ?
                new ObjectParameter("AggergatorServiceID", aggergatorServiceID) :
                new ObjectParameter("AggergatorServiceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASService_Update", iDParameter, fK_VASServiceCategoryIDParameter, isActiveParameter, serviceNameParameter, remarksParameter, headerTextParameter, footerTextParameter, welcomeTextParameter, goodbyeTextParameter, servicePriceParameter, iMIEnduserTariffParameter, aggergatorServiceIDParameter);
        }
    
        public virtual int spr_VASServiceMembership_Insert(Nullable<int> fK_VASServiceID, string subscriptionKey, string unsubscriptionKey, Nullable<bool> isNewsContent)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            var subscriptionKeyParameter = subscriptionKey != null ?
                new ObjectParameter("SubscriptionKey", subscriptionKey) :
                new ObjectParameter("SubscriptionKey", typeof(string));
    
            var unsubscriptionKeyParameter = unsubscriptionKey != null ?
                new ObjectParameter("UnsubscriptionKey", unsubscriptionKey) :
                new ObjectParameter("UnsubscriptionKey", typeof(string));
    
            var isNewsContentParameter = isNewsContent.HasValue ?
                new ObjectParameter("IsNewsContent", isNewsContent) :
                new ObjectParameter("IsNewsContent", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceMembership_Insert", fK_VASServiceIDParameter, subscriptionKeyParameter, unsubscriptionKeyParameter, isNewsContentParameter);
        }
    
        public virtual int spr_VASServiceMembership_NewsContent_Delete(Nullable<int> fK_NewsContentID)
        {
            var fK_NewsContentIDParameter = fK_NewsContentID.HasValue ?
                new ObjectParameter("FK_NewsContentID", fK_NewsContentID) :
                new ObjectParameter("FK_NewsContentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceMembership_NewsContent_Delete", fK_NewsContentIDParameter);
        }
    
        public virtual int spr_VASServiceMembership_NewsContent_Insert(Nullable<int> fK_VASServiceID, Nullable<int> fK_NewsContentID)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            var fK_NewsContentIDParameter = fK_NewsContentID.HasValue ?
                new ObjectParameter("FK_NewsContentID", fK_NewsContentID) :
                new ObjectParameter("FK_NewsContentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceMembership_NewsContent_Insert", fK_VASServiceIDParameter, fK_NewsContentIDParameter);
        }
    
        public virtual int spr_VASServiceMembership_Update(Nullable<int> fK_VASServiceID, string subscriptionKey, string unsubscriptionKey)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            var subscriptionKeyParameter = subscriptionKey != null ?
                new ObjectParameter("SubscriptionKey", subscriptionKey) :
                new ObjectParameter("SubscriptionKey", typeof(string));
    
            var unsubscriptionKeyParameter = unsubscriptionKey != null ?
                new ObjectParameter("UnsubscriptionKey", unsubscriptionKey) :
                new ObjectParameter("UnsubscriptionKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceMembership_Update", fK_VASServiceIDParameter, subscriptionKeyParameter, unsubscriptionKeyParameter);
        }
    
        public virtual int spr_VASServiceMembershipSerialContentFooter_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceMembershipSerialContentFooter_Delete", iDParameter);
        }
    
        public virtual int spr_VASServiceMembershipSerialContentFooter_Insert(Nullable<int> fK_VASServiceID, Nullable<int> theOrder, string theText, Nullable<int> intervalDay, Nullable<System.TimeSpan> sendTime, Nullable<System.DateTime> sTime)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            var theOrderParameter = theOrder.HasValue ?
                new ObjectParameter("theOrder", theOrder) :
                new ObjectParameter("theOrder", typeof(int));
    
            var theTextParameter = theText != null ?
                new ObjectParameter("theText", theText) :
                new ObjectParameter("theText", typeof(string));
    
            var intervalDayParameter = intervalDay.HasValue ?
                new ObjectParameter("IntervalDay", intervalDay) :
                new ObjectParameter("IntervalDay", typeof(int));
    
            var sendTimeParameter = sendTime.HasValue ?
                new ObjectParameter("SendTime", sendTime) :
                new ObjectParameter("SendTime", typeof(System.TimeSpan));
    
            var sTimeParameter = sTime.HasValue ?
                new ObjectParameter("STime", sTime) :
                new ObjectParameter("STime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceMembershipSerialContentFooter_Insert", fK_VASServiceIDParameter, theOrderParameter, theTextParameter, intervalDayParameter, sendTimeParameter, sTimeParameter);
        }
    
        public virtual int spr_VASServiceMembershipSerialContentFooter_Update(Nullable<int> iD, Nullable<int> theOrder, string theText, Nullable<int> intervalDay, Nullable<System.TimeSpan> sendTime)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var theOrderParameter = theOrder.HasValue ?
                new ObjectParameter("theOrder", theOrder) :
                new ObjectParameter("theOrder", typeof(int));
    
            var theTextParameter = theText != null ?
                new ObjectParameter("theText", theText) :
                new ObjectParameter("theText", typeof(string));
    
            var intervalDayParameter = intervalDay.HasValue ?
                new ObjectParameter("IntervalDay", intervalDay) :
                new ObjectParameter("IntervalDay", typeof(int));
    
            var sendTimeParameter = sendTime.HasValue ?
                new ObjectParameter("SendTime", sendTime) :
                new ObjectParameter("SendTime", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceMembershipSerialContentFooter_Update", iDParameter, theOrderParameter, theTextParameter, intervalDayParameter, sendTimeParameter);
        }
    
        public virtual int spr_VASServiceMembershipSerialContentHeader_Delete(Nullable<int> fK_VASServiceID)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceMembershipSerialContentHeader_Delete", fK_VASServiceIDParameter);
        }
    
        public virtual int spr_VASServiceMembershipSerialContentHeader_Insert(Nullable<int> fK_VASServiceID, string theName, Nullable<System.DateTime> stratFrom, Nullable<System.DateTime> endAt, Nullable<bool> isActive, Nullable<System.DateTime> sTime)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            var theNameParameter = theName != null ?
                new ObjectParameter("theName", theName) :
                new ObjectParameter("theName", typeof(string));
    
            var stratFromParameter = stratFrom.HasValue ?
                new ObjectParameter("StratFrom", stratFrom) :
                new ObjectParameter("StratFrom", typeof(System.DateTime));
    
            var endAtParameter = endAt.HasValue ?
                new ObjectParameter("EndAt", endAt) :
                new ObjectParameter("EndAt", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var sTimeParameter = sTime.HasValue ?
                new ObjectParameter("STime", sTime) :
                new ObjectParameter("STime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceMembershipSerialContentHeader_Insert", fK_VASServiceIDParameter, theNameParameter, stratFromParameter, endAtParameter, isActiveParameter, sTimeParameter);
        }
    
        public virtual int spr_VASServiceMembershipSerialContentHeader_Update(Nullable<int> fK_VASServiceID, string theName, Nullable<System.DateTime> stratFrom, Nullable<System.DateTime> endAt, Nullable<bool> isActive)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            var theNameParameter = theName != null ?
                new ObjectParameter("theName", theName) :
                new ObjectParameter("theName", typeof(string));
    
            var stratFromParameter = stratFrom.HasValue ?
                new ObjectParameter("StratFrom", stratFrom) :
                new ObjectParameter("StratFrom", typeof(System.DateTime));
    
            var endAtParameter = endAt.HasValue ?
                new ObjectParameter("EndAt", endAt) :
                new ObjectParameter("EndAt", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceMembershipSerialContentHeader_Update", fK_VASServiceIDParameter, theNameParameter, stratFromParameter, endAtParameter, isActiveParameter);
        }
    
        public virtual int spr_VASServiceOnDemand_Insert(Nullable<int> fK_VASServiceID, Nullable<byte> theType, string theKey, Nullable<bool> isSystematic)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            var theTypeParameter = theType.HasValue ?
                new ObjectParameter("theType", theType) :
                new ObjectParameter("theType", typeof(byte));
    
            var theKeyParameter = theKey != null ?
                new ObjectParameter("theKey", theKey) :
                new ObjectParameter("theKey", typeof(string));
    
            var isSystematicParameter = isSystematic.HasValue ?
                new ObjectParameter("IsSystematic", isSystematic) :
                new ObjectParameter("IsSystematic", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceOnDemand_Insert", fK_VASServiceIDParameter, theTypeParameter, theKeyParameter, isSystematicParameter);
        }
    
        public virtual int spr_VASServiceOnDemand_Update(Nullable<int> fK_VASServiceID, Nullable<byte> theType, string theKey)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            var theTypeParameter = theType.HasValue ?
                new ObjectParameter("theType", theType) :
                new ObjectParameter("theType", typeof(byte));
    
            var theKeyParameter = theKey != null ?
                new ObjectParameter("theKey", theKey) :
                new ObjectParameter("theKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceOnDemand_Update", fK_VASServiceIDParameter, theTypeParameter, theKeyParameter);
        }
    
        public virtual int spr_VASServiceOnDemandManualContent_Delete(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceOnDemandManualContent_Delete", iDParameter);
        }
    
        public virtual int spr_VASServiceOnDemandManualContent_Insert(Nullable<int> fK_VASServiceID, Nullable<System.DateTime> validFrom, Nullable<System.DateTime> validTo, string theText, Nullable<bool> isActive, Nullable<System.DateTime> sTime)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            var validFromParameter = validFrom.HasValue ?
                new ObjectParameter("ValidFrom", validFrom) :
                new ObjectParameter("ValidFrom", typeof(System.DateTime));
    
            var validToParameter = validTo.HasValue ?
                new ObjectParameter("ValidTo", validTo) :
                new ObjectParameter("ValidTo", typeof(System.DateTime));
    
            var theTextParameter = theText != null ?
                new ObjectParameter("theText", theText) :
                new ObjectParameter("theText", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var sTimeParameter = sTime.HasValue ?
                new ObjectParameter("STime", sTime) :
                new ObjectParameter("STime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceOnDemandManualContent_Insert", fK_VASServiceIDParameter, validFromParameter, validToParameter, theTextParameter, isActiveParameter, sTimeParameter);
        }
    
        public virtual int spr_VASServiceOnDemandManualContent_Update(Nullable<int> iD, Nullable<System.DateTime> validFrom, Nullable<System.DateTime> validTo, string theText, Nullable<bool> isActive)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var validFromParameter = validFrom.HasValue ?
                new ObjectParameter("ValidFrom", validFrom) :
                new ObjectParameter("ValidFrom", typeof(System.DateTime));
    
            var validToParameter = validTo.HasValue ?
                new ObjectParameter("ValidTo", validTo) :
                new ObjectParameter("ValidTo", typeof(System.DateTime));
    
            var theTextParameter = theText != null ?
                new ObjectParameter("theText", theText) :
                new ObjectParameter("theText", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_VASServiceOnDemandManualContent_Update", iDParameter, validFromParameter, validToParameter, theTextParameter, isActiveParameter);
        }
    
        public virtual int tbl_VASServiceOnDemandSystematic_Insert(Nullable<int> fK_VASServiceID, string webServicePath, string webServiceMethod, string webMethodUsername, string webMethodPassword, string webMethodOtherParameter)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            var webServicePathParameter = webServicePath != null ?
                new ObjectParameter("WebServicePath", webServicePath) :
                new ObjectParameter("WebServicePath", typeof(string));
    
            var webServiceMethodParameter = webServiceMethod != null ?
                new ObjectParameter("WebServiceMethod", webServiceMethod) :
                new ObjectParameter("WebServiceMethod", typeof(string));
    
            var webMethodUsernameParameter = webMethodUsername != null ?
                new ObjectParameter("WebMethodUsername", webMethodUsername) :
                new ObjectParameter("WebMethodUsername", typeof(string));
    
            var webMethodPasswordParameter = webMethodPassword != null ?
                new ObjectParameter("WebMethodPassword", webMethodPassword) :
                new ObjectParameter("WebMethodPassword", typeof(string));
    
            var webMethodOtherParameterParameter = webMethodOtherParameter != null ?
                new ObjectParameter("WebMethodOtherParameter", webMethodOtherParameter) :
                new ObjectParameter("WebMethodOtherParameter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_VASServiceOnDemandSystematic_Insert", fK_VASServiceIDParameter, webServicePathParameter, webServiceMethodParameter, webMethodUsernameParameter, webMethodPasswordParameter, webMethodOtherParameterParameter);
        }
    
        public virtual int tbl_VASServiceOnDemandSystematic_Update(Nullable<int> fK_VASServiceID, string webServicePath, string webServiceMethod, string webMethodUsername, string webMethodPassword, string webMethodOtherParameter)
        {
            var fK_VASServiceIDParameter = fK_VASServiceID.HasValue ?
                new ObjectParameter("FK_VASServiceID", fK_VASServiceID) :
                new ObjectParameter("FK_VASServiceID", typeof(int));
    
            var webServicePathParameter = webServicePath != null ?
                new ObjectParameter("WebServicePath", webServicePath) :
                new ObjectParameter("WebServicePath", typeof(string));
    
            var webServiceMethodParameter = webServiceMethod != null ?
                new ObjectParameter("WebServiceMethod", webServiceMethod) :
                new ObjectParameter("WebServiceMethod", typeof(string));
    
            var webMethodUsernameParameter = webMethodUsername != null ?
                new ObjectParameter("WebMethodUsername", webMethodUsername) :
                new ObjectParameter("WebMethodUsername", typeof(string));
    
            var webMethodPasswordParameter = webMethodPassword != null ?
                new ObjectParameter("WebMethodPassword", webMethodPassword) :
                new ObjectParameter("WebMethodPassword", typeof(string));
    
            var webMethodOtherParameterParameter = webMethodOtherParameter != null ?
                new ObjectParameter("WebMethodOtherParameter", webMethodOtherParameter) :
                new ObjectParameter("WebMethodOtherParameter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tbl_VASServiceOnDemandSystematic_Update", fK_VASServiceIDParameter, webServicePathParameter, webServiceMethodParameter, webMethodUsernameParameter, webMethodPasswordParameter, webMethodOtherParameterParameter);
        }
    
        public virtual int spr_User_Profile_Update(Nullable<int> iD, Nullable<bool> isMale, string tel, string mobile, Nullable<System.DateTime> sTime, Nullable<int> fK_UserID, string nationalNo, string address, Nullable<bool> isReal)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var isMaleParameter = isMale.HasValue ?
                new ObjectParameter("IsMale", isMale) :
                new ObjectParameter("IsMale", typeof(bool));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var sTimeParameter = sTime.HasValue ?
                new ObjectParameter("STime", sTime) :
                new ObjectParameter("STime", typeof(System.DateTime));
    
            var fK_UserIDParameter = fK_UserID.HasValue ?
                new ObjectParameter("FK_UserID", fK_UserID) :
                new ObjectParameter("FK_UserID", typeof(int));
    
            var nationalNoParameter = nationalNo != null ?
                new ObjectParameter("NationalNo", nationalNo) :
                new ObjectParameter("NationalNo", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var isRealParameter = isReal.HasValue ?
                new ObjectParameter("IsReal", isReal) :
                new ObjectParameter("IsReal", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spr_User_Profile_Update", iDParameter, isMaleParameter, telParameter, mobileParameter, sTimeParameter, fK_UserIDParameter, nationalNoParameter, addressParameter, isRealParameter);
        }
    }
}
